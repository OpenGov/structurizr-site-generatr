name: pr
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  VERSION: '0.0.1'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  build-gradle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 19
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.6.0
      - name: Execute Gradle build
        run: ./gradlew test installDist
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: build/install
          retention-days: 1
  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    needs: build-gradle
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: binaries
          path: build/install

      - name: Build container image
        uses: docker/build-push-action@v4
        with:
          push: false
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # tags: |
          #   ghcr.io/avisi-cloud/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          #   ghcr.io/avisi-cloud/${{ env.IMAGE_NAME }}:latest
          # labels: |
          #   org.opencontainers.image.title=${{ github.event.repository.name }}
          #   org.opencontainers.image.description=${{ github.event.repository.description }}
          #   org.opencontainers.image.url=${{ github.event.repository.html_url }}
          #   org.opencontainers.image.revision=${{ github.sha }}
          #   org.opencontainers.image.version=${{ env.VERSION }}
